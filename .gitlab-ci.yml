image: node:18  # Global image definition

stages:
  - build
  - test
  - report
  - archive
  - notify

before_script:
  - apt-get update && apt-get install -y wget gnupg2 curl
  # Add Google Chrome repository and install
  - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
  - echo "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list
  - apt-get update && apt-get install -y google-chrome-stable --no-install-recommends
  - google-chrome --version
  # Install dependencies
  - npm install
  - npm install -g allure-commandline  # Install Allure globally

build:
  stage: build
  script:
    - echo "Checkout code"
    - git checkout master
  artifacts:
    paths:
      - dist/
    expire_in: 1 day

test:
  stage: test
  script:
    - echo "Run tests"
    - npx wdio run wdio.conf.ts
  variables:
    CHROME_BIN: "/usr/bin/google-chrome"
  artifacts:
    paths:
      - reports/
      - screenshots/
      - allure-results/  # Store raw Allure test results
    when: always
    expire_in: 7 days

  report:
  stage: report
  script:
    - echo "Generate Allure report"
    - ls -la  # Check if we are in the correct working directory
    - ls -la allure-results  # Debug: Check if allure-results has content
    - mkdir -p allure-results  # Ensure the directory exists
    - if [ "$(ls -A allure-results)" ]; then allure generate allure-results --clean -o allure-report; else echo "No Allure results found, skipping report generation."; fi
    - ls -la allure-report  # Debug: Check if allure-report was created
  artifacts:
    paths:
      - allure-report/
    when: always
    expire_in: 14 days