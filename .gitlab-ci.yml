image: node:18  # Global image definition

stages:
  - build
  - test
  - report
  - archive
  - notify

before_script:
  - apt-get update && apt-get install -y wget gnupg2 curl
  # Add Google Chrome repository and install
  - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
  - echo "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list
  - apt-get update && apt-get install -y google-chrome-stable --no-install-recommends
  - google-chrome --version
  # Install dependencies
  - npm install
  - npm install --save-dev chromedriver allure-commandline

build:
  stage: build
  script:
    - echo "Checkout code"
    - git checkout master
    - npm run build  # Assuming this generates a build
  artifacts:
    paths:
      - dist/  # Save the build output for later stages
    expire_in: 1 day

test:
  stage: test
  script:
    - echo "Run tests"
    - npx wdio run wdio.conf.ts
  variables:
    CHROME_BIN: "/usr/bin/google-chrome"
  artifacts:
    paths:
      - reports/  # Store WebdriverIO test reports
      - screenshots/  # Store failure screenshots
      - allure-results/  # Store raw Allure test results
    when: always
    expire_in: 7 days

report:
  stage: report
  script:
    - echo "Generate Allure report"
    - npm install --save-dev allure-commandline
    - allure generate allure-results --clean -o allure-report
  artifacts:
    paths:
      - allure-report/  # Store the generated Allure report
    when: always
    expire_in: 14 days

archive:
  stage: archive
  script:
    - echo "Archiving artifacts"
  dependencies:
    - build
  artifacts:
    paths:
      - dist/  # Archive the final build output
    expire_in: 30 days
